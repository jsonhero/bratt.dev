{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  makeSource,\n  ComputedFields,\n} from \"@contentlayer/source-files\";\nimport rehypePrism from \"@mapbox/rehype-prism\";\n\nconst getSlug = (doc: any) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\");\n\nconst blogComputedFields: ComputedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => getSlug(doc),\n  },\n  image: {\n    type: \"string\",\n    resolve: (doc) => `/blog/${getSlug(doc)}/image.png`,\n  },\n};\n\nexport const Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `blogs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    summary: { type: \"string\", required: true },\n    publishedAt: { type: \"string\", required: true },\n    updatedAt: { type: \"string\", required: false },\n    tags: { type: \"json\", required: false },\n  },\n  computedFields: blogComputedFields,\n}));\n\nconst projectComputedFields: ComputedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => getSlug(doc),\n  },\n};\n\nexport const Project = defineDocumentType(() => ({\n  name: \"Project\",\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    period: { type: \"string\", required: true },\n    url: { type: \"string\", required: false },\n  },\n  computedFields: projectComputedFields,\n}));\n\nexport default makeSource({\n  contentDirPath: \"_content\",\n  documentTypes: [Blog, Project],\n  mdx: {\n    rehypePlugins: [rehypePrism],\n  },\n});"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,OAEK;AACP,OAAO,iBAAiB;AAExB,IAAM,UAAU,CAAC,QAAa,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAE1E,IAAM,qBAAqC;AAAA,EACzC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AAAA,EACA,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,SAAS,QAAQ,GAAG,CAAC;AAAA,EACzC;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,WAAW,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC7C,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC;AAAA,EACA,gBAAgB;AAClB,EAAE;AAEF,IAAM,wBAAwC;AAAA,EAC5C,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC/B;AACF;AAEO,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,QAAQ,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACzC,KAAK,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,EACzC;AAAA,EACA,gBAAgB;AAClB,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,OAAO;AAAA,EAC7B,KAAK;AAAA,IACH,eAAe,CAAC,WAAW;AAAA,EAC7B;AACF,CAAC;",
  "names": []
}
